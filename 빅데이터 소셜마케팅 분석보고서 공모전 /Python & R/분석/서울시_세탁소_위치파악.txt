{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import pandas as pd\
\
shop_2018_01 = pd.read_csv('/Users/hankiho/Desktop/Data/
\f1 \'bc\'d2\'bb\'f3\'b0\'f8\'c0\'ce\'bd\'c3\'c0\'e5\'c1\'f8\'c8\'ef\'b0\'f8\'b4\'dc
\f0 _
\f1 \'bb\'f3\'b0\'a1\'be\'f7\'bc\'d2\'c1\'a4\'ba\'b8
\f0 _201809/
\f1 \'bc\'d2\'bb\'f3\'b0\'f8\'c0\'ce\'bd\'c3\'c0\'e5\'c1\'f8\'c8\'ef\'b0\'f8\'b4\'dc
\f0 _
\f1 \'bb\'f3\'b0\'a1\'be\'f7\'bc\'d2\'c1\'a4\'ba\'b8
\f0 _201809_1.csv',\
                           encoding='cp949')\
df_seoul = shop_2018_01[shop_2018_01['
\f1 \'b5\'b5\'b7\'ce\'b8\'ed\'c1\'d6\'bc\'d2
\f0 '].str.contains('
\f1 \'bc\'ad\'bf\'ef
\f0 ')]\
df_seoul = df_seoul[['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 ', '
\f1 \'c1\'f6\'c1\'a1\'b8\'ed
\f0 ','
\f1 \'bb\'f3\'b1\'c7\'be\'f7\'c1\'be\'b4\'eb\'ba\'d0\'b7\'f9\'b8\'ed
\f0 ','
\f1 \'bb\'f3\'b1\'c7\'be\'f7\'c1\'be\'c1\'df\'ba\'d0\'b7\'f9\'b8\'ed
\f0 ', '
\f1 \'bb\'f3\'b1\'c7\'be\'f7\'c1\'be\'bc\'d2\'ba\'d0\'b7\'f9\'b8\'ed
\f0 ', '
\f1 \'c7\'a5\'c1\'d8\'bb\'ea\'be\'f7\'ba\'d0\'b7\'f9\'b8\'ed
\f0 ','
\f1 \'c1\'f6\'b9\'f8\'c1\'d6\'bc\'d2
\f0 ',\
                    '
\f1 \'b0\'e6\'b5\'b5
\f0 ', '
\f1 \'c0\'a7\'b5\'b5
\f0 ']]\
\
df_life_seoul = df_seoul[df_seoul['
\f1 \'bb\'f3\'b1\'c7\'be\'f7\'c1\'be\'b4\'eb\'ba\'d0\'b7\'f9\'b8\'ed
\f0 '].str.contains('
\f1 \'bb\'fd\'c8\'b0\'bc\'ad\'ba\'f1\'bd\'ba
\f0 ')]\
seoul_laundary = df_seoul[df_seoul['
\f1 \'bb\'f3\'b1\'c7\'be\'f7\'c1\'be\'bc\'d2\'ba\'d0\'b7\'f9\'b8\'ed
\f0 '].str.contains('
\f1 \'bb\'a1\'b7\'a1\'b9\'e6
\f0 ')]\
seoul_coin_laundary = seoul_laundary[seoul_laundary['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 '].str.contains('
\f1 \'c4\'da\'c0\'ce
\f0 ')]\
df_seoul[df_seoul['
\f1 \'bb\'f3\'b1\'c7\'be\'f7\'c1\'be\'bc\'d2\'ba\'d0\'b7\'f9\'b8\'ed
\f0 '].str.contains('
\f1 \'bb\'a1\'b7\'a1\'b9\'e6
\f0 ')]\
\
a  = df_seoul[df_seoul['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 '].str.contains('
\f1 \'c4\'da\'c0\'ce\'bf\'f6\'bd\'c3
\f0 ')]\
\
b = df_seoul[df_seoul['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 '].str.contains('
\f1 \'c4\'da\'c0\'ce\'bb\'a1\'b7\'a1\'b9\'e6
\f0 ')]\
\
cleantopia = df_seoul[df_seoul['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 '].str.contains('
\f1 \'c5\'a9\'b8\'b0\'c5\'e4\'c7\'c7\'be\'c6
\f0 ')]\
\
c = cleantopia[cleantopia['
\f1 \'c1\'f6\'c1\'a1\'b8\'ed
\f0 '].str.contains('
\f1 \'c4\'da\'c0\'ce
\f0 ',na=False)]\
\
d = df_seoul[df_seoul['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 '].str.contains('
\f1 \'c4\'da\'c0\'ce
\f0 ')]\
\
e = df_seoul[df_seoul['
\f1 \'bb\'f3\'c8\'a3\'b8\'ed
\f0 '].str.contains('
\f1 \'bb\'a1\'b7\'a1
\f0 ')]\
\
total_laundary = pd.concat([a, b, c, d, e], axis = 0)\
\
from plotnine import *\
\
from matplotlib import rc\
import matplotlib.pyplot as plt\
rc('font', family='AppleGothic')\
plt.rcParams['axes.unicode_minus'] = False\
\
(ggplot(total_laundary)\
 + aes(x = '
\f1 \'b0\'e6\'b5\'b5
\f0 ', y = '
\f1 \'c0\'a7\'b5\'b5
\f0 ')\
 + geom_point(color = 'skyblue', size = 1)\
 + theme(text=element_text(family='AppleGothic'))\
 + scale_fill_gradient(low = 'blue', high = 'green') \
 + ggtitle('
\f1 \'bc\'ad\'bf\'ef\'bd\'c3
\f0  
\f1 \'c4\'da\'c0\'ce\'bb\'a1\'b7\'a1\'b9\'e6
\f0  
\f1 \'ba\'d0\'c6\'f7
\f0 ')\
)}